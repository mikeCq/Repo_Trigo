<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtSeleccionarLotes.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/7gAOQWRvYmUAZAAAAAAB/+EEukV4aWYAAE1NACoAAAAIAAcBEgAD
        AAAAAQABAAABGgAFAAAAAQAAAGIBGwAFAAAAAQAAAGoBKAADAAAAAQACAAABMQACAAAAHgAAAHIBMgAC
        AAAAFAAAAJCHaQAEAAAAAQAAAKQAAADQAEgCTgABAAAASAJOAAEAAEFkb2JlIFBob3Rvc2hvcCBDUzYg
        KFdpbmRvd3MpADIwMTY6MDU6MjQgMTI6NTk6NTEAAAOgAQADAAAAAf//AACgAgAEAAAAAQAAACKgAwAE
        AAAAAQAAACIAAAAAAAAABgEDAAMAAAABAAYAAAEaAAUAAAABAAABHgEbAAUAAAABAAABJgEoAAMAAAAB
        AAIAAAIBAAQAAAABAAABLgICAAQAAAABAAADhAAAAAAAAABIAAAAAQAAAEgAAAAB/9j/7QAMQWRvYmVf
        Q00AAv/uAA5BZG9iZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwM
        EQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwMDAwMEREM
        DAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIACIAIgMBIgACEQEDEQH/3QAEAAP/
        xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkK
        CxAAAQQBAwIEAgUHBggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh
        8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpamtsbW5vY3
        R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi
        4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZm
        doaWprbG1ub2JzdHV2d3h5ent8f/2gAMAwEAAhEDEQA/APVUkl5z9f8A6/8Apep0Xotn6XVmXlsP0ezq
        KHD/AAn+lt/wf/GfzaU6XXf8ZnTul9YrwKK/tdNbtudcw/Q7bKPzbbK/8L/22uuw8zFzsavKxLW3UWgO
        ZY0yCCvDPqt9Vs76x53o0fo8asg5OSRLWNP5rf37X/4Ote29K6VhdIwa8DBZ6dFQ0nUkn6Vj3fnPekpu
        JJJJKf/Q9TsrZbW6qwSx4LXDiQRDuF419ePqPd0C45mGHW9Ktd7Xcupcf8Fb/I/0Vv8AYf8ApP5z2dDv
        opyaX4+QxttNrS2ytwlrmnlrgkp8j+oP14HRHjpnUP8Ak250ttA91T3cvdt/nKnf4T9xevMeyxjbK3B7
        HgOa5pkEHVrmuC8o67/iv6jV1iuro49Tp+U7R7z/ADH7zbz9J1bf8E//AK3/ADn856T0Ho9PROl09Ops
        fa2kavsMkk6u2j/Bs3fRrSU6CSSSSn//0fVUl8qpJKfqpJfKqSSn6qSXyqkkp//Z/9sAQwABAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAgICAgICAgICAgIDAwMDAwMDAwMD/9sA
        QwEBAQEBAQEBAQEBAgIBAgIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMD/8AAEQgAIgAiAwERAAIRAQMRAf/EAB8AAAAGAgMBAAAAAAAAAAAAAAcIBgUECQMKAgEAC//E
        ALUQAAIBAwQBAwMCAwMDAgYJdQECAwQRBRIGIQcTIgAIMRRBMiMVCVFCFmEkMxdScYEYYpElQ6Gx8CY0
        cgoZwdE1J+FTNoLxkqJEVHNFRjdHYyhVVlcassLS4vJkg3SThGWjs8PT4yk4ZvN1Kjk6SElKWFlaZ2hp
        anZ3eHl6hYaHiImKlJWWl5iZmqSlpqeoqaq0tba3uLm6xMXGx8jJytTV1tfY2drk5ebn6Onq9PX29/j5
        +v/EAB8BAAAGAwEBAQAAAAAAAAAAAAYFBAMHAggBCQAKC//EALURAAIBAwIEBAMFBAQEBgYFbQECAxEE
        IRIFMQYAIhNBUQcyYRRxCEKBI5EVUqFiFjMJsSTB0UNy8BfhgjQlklMYY0TxorImNRlUNkVkJwpzg5NG
        dMLS4vJVZXVWN4SFo7PD0+PzKRqUpLTE1OT0laW1xdXl9ShHV2Y4doaWprbG1ub2Z3eHl6e3x9fn90hY
        aHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/dAAQABf/aAAwDAQACEQMRAD8A3+Pf
        uvde9+691rIfOn/hS/8AHT4mfMHZnx02HtA96bE2huWpwfyo7N2rlkkGw6kyCgm231dDG64zfO7dmVRe
        fNpLPDRJJD/DYpvvDUvRe691sUdR9v8AWPfXXO0u3OnN77f7F633zh6TO7X3btqtWtxuSx9ZCkyBgRHV
        Y/IUxfxVVHVRw1lFUK8NRFHMjovuvdCP7917r//Q3+PfuvdaXf8AP3/n7/3O/vr8GPgxvX/f4f7kNrfI
        P5B7WyH/AB5/+cos11V1VmqKT/j8f10+czlO/wDuH9dHRv8AxDzTY/3XutZr+Vr/ACtO8P5n3eEexdiR
        1Gz+odn1OOru7O7K7HSVWB2DgKqRnjxmMjZoIdw9gbhhgkTE4lJFaRlaedoaSGeZPde6+o/8VPit0p8L
        +jtmfHvoHa391eu9lUhSniqKp8hms9mapY3ze7Nz5WRY2yu5tx1qGorJwkURkbTDFDCscSe690Yr37r3
        X//R339x7fxG7Nv53au4KT+IYHcuGym383QeeppfvcRmaKfHZKk+6opqaspvuaOpdPJDJHKmq6srAEe6
        9180X+d7/JC3l/Ln3lW93dI0Wc3r8Lt65wRYrKympy2e6Jz2WqdNF1/2BWt5air21V1EohwGfmJ+5ulF
        XOK4QzZD3XuhV/kHfzvofgXm6b4r/JD7eT4lb93TPlcbvahxEH8e6O3xuCSngrt0ZM42kGS3V1/mnhhG
        Whk+4rsasa1NHqRJqSo917r6NeFzWG3LhsTuLbuWxmf2/n8ZQZrBZ3C19LlcNmsNlaWKuxeWxOUoZZ6L
        JYzJUU6TQTwu8U0Tq6MVIPv3XunP37r3X//S3+PfuvdJTfWxdm9nbN3P132JtjB712LvXB5HbW7dpblx
        1NlsDuHA5amko8lisrjayOWmq6OrppWVlZT9bixAPv3XutAL50/8JgfkVtX5g7N2r8KqAbv+MPd25ag4
        /dW6ssS3xlgWQVmbw/aGQmabLZzaOJoGeXCZOnjqshkY4vsZ43r1jmr/AHXut2r4JfDvZ3wN+MPW3xk2
        Pu/ee+8PsHHy/c7q3vk563JZfOZNxWZ6rxuOeoqaTam3J8o8j0GHpXenx8DCPXNJ5J5Pde6N97917r//
        09/j37r3Xvfuvde9+691737r3Xvfuvdf/9k=
</value>
  </data>
</root>